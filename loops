for statement:
	A for loop repeats until a specified condition evaluates to false. The JavaScript for loop is similar to the Java and C for loop. A for statement looks as follows:
	for ([initialExpression]; [condition]; [incrementExpression]){
		statement
	}

do...while statement
	The do...while statement repeats until a specified condition evaluates to false. A do...while statement looks as follows:
	do{
		statement
	}
	while (condition);

while statement
	A while statement executes its statements as long as a specified condition evaluates to true. A while statement looks as follows:
	while (condition){
		statements
	}

	If the condition becomes false, statement within the loop stops executing and control passes to the statement following the loop.

	The condition test occurs before statement in the loop is executed. If the condition returns true, statement is executed and the condition is tested again. If the condition returns false, execution stops and control is passed to the statement following while.

	To execute multiple statements, use a block statement ({ ... }) to group those statements.

for...in statement
	The for...in statement iterates a specified variable over all the enumerable properties of an object. For each distinct property, JavaScript executes the specified statements. A for...in statement looks as follows:

	for (variable in object) {
		statements
	}

for...of statement
	The for...of statement creates a loop Iterating over iterable objects (including Array, Map, Set, arguments object and so on), invoking a custom iteration hook with statements to be executed for the value of each distinct property.

	for (variable of object) {
		statement
	}

	The following example shows the difference between a for...of loop and a for...in loop. While for...in iterates over property names, for...of iterates over property values.